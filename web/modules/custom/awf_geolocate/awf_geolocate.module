<?php

/**
 * @file
 * Contains awf_geolocate.module.
 */

use Drupal\smart_ip\SmartIp;

/**
 * Check if current user is in the UK.
 */
function awf_geolocate_user_in_uk($ip = NULL) {

  // @todo Debug only - force IP to be from UK.
  //$ip = '185.86.151.11';

  $country_code = awf_geolocate_get_country_code($ip);
  $result = ($country_code == 'GB') ? TRUE : FALSE;

  return $result;
}

/**
 * Get the country code from an IP address (defaults to IP of current request).
 */
function awf_geolocate_get_country_code($ip = NULL) {

  if (empty($ip)) {
    $ip = \Drupal::request()->getClientIp();
  }

  // Get country code from IP, using GeoIP contrib.
  //$geolocator = \Drupal::service('geoip.geolocation');
  //$country_code = $geolocator->geolocate($ip);

  // Get country code from IP, using Smart IP contrib.
  $location = SmartIp::query($ip);
  $country_code = (isset($location['countryCode'])) ? $location['countryCode'] : NULL;

  return $country_code;
}

/**
 * Check if an IP address is in the EU (defaults to IP of current request).
 * This is not currently possible w/ the GeoIP contrib.
 */
function awf_geolocate_user_in_eu($ip = NULL) {

  if (empty($ip)) {
    $ip = \Drupal::request()->getClientIp();
  }

  // @todo Debug only - force IP to be from EU or not (UK).
  //$ip = '185.86.151.11'; // UK ip.
  $ip = '176.56.238.3'; // EU ip.

  // Get EU info from IP, using Smart IP contrib.
  $location = SmartIp::query($ip);
  $in_eu = (isset($location['isEuCountry']) && $location['isEuCountry']) ? TRUE : FALSE;

  return $in_eu;
}
