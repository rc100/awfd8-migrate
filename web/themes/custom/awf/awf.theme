<?php

/**
 * @file
 * Functions to support theming in the awf theme.
 */

use Drupal\Core\Form\FormStateInterface;

require_once dirname(__FILE__) . '/includes/theme.inc';

/*
// BrightEdge:
// Your access to and use of BrightEdge Link Equity Manager is governed by the
// Infrastructure Product Terms located at:
// www.brightedge.com/infrastructure-product-terms.
// Customer acknowledges and agrees it has read, understands and agrees to be
// bound by the Infrastructure Product Terms.
//
// IXF: save the be_ixf_client.php file to your server, then use "require" to
// include it in your template.
 */
use BrightEdge\BEIXFClient;

require_once dirname(__FILE__) . '/includes/be_ixf_client.php';

/**
 * Implements template_preprocess_html().
 */
function awf_preprocess_html(&$variables) {

  if ($node = \Drupal::request()->attributes->get('node')) {
    $variables['attributes']['class'][] = 'page-node-' . $node->id();
  }
  $current_path = \Drupal::service('path.current')->getPath();
  $variables['current_path'] = \Drupal::service('path.alias_manager')->getAliasByPath($current_path);

  $xuacompatible = [
    '#tag' => 'meta',
    '#attributes' => [
      'http-equiv' => 'x-ua-compatible',
      'content' => 'ie=edge',
    ],
  ];
  $variables['page']['#attached']['html_head'][] = [$xuacompatible, 'x-ua-compatible'];

  // Add node id as a class.
  $request = \Drupal::request();
  $node = ($request->attributes->get('_route') == 'entity.node.canonical'
            ? $request->attributes->get('node')
            : NULL
          );

  if ($node) {
    $variables['attributes']['class'][] = 'page-node-' . $node->id();
  }

  // Landing page content type.
  if ($node != NULL && ($node->getType() == 'landing_page')) {
    $landing_page_type = $node->get('field_tags_landing_page')->target_id;
    $overview_landing_page_type = $node->get('field_overview_type')->value;

    // If overview landing page add class.
    if ($landing_page_type == '550') {
      $variables['attributes']['class'][] = 'landing-overview';

      // If overview field filled out add class.
      if ($overview_landing_page_type == 'people') {
        $variables['attributes']['class'][] = 'overview-people';
      }
      elseif ($overview_landing_page_type == 'land') {
        $variables['attributes']['class'][] = 'overview-land';
      }
    }
    // If sub page type add class.
    elseif ($landing_page_type == '551') {
      $variables['attributes']['class'][] = 'landing-subpage';
    }
  }

  // BrightEdge.
  // IXF: the following array and constructor must be placed before any HTML is
  // written to the page.
  $be_ixf_config = [
    BEIXFClient::$CAPSULE_MODE_CONFIG => BEIXFClient::$REMOTE_PROD_CAPSULE_MODE,
    BEIXFClient::$ACCOUNT_ID_CONFIG => "f00000000165670",
    // IXF: By default, all URL parameters are ignored. If you have URL
    // parameters that add value to page content. Add them to this config value,
    // separated by the pipe character (|).
    BEIXFClient::$WHITELIST_PARAMETER_LIST_CONFIG => "ixf",
  ];
  $be_ixf = new BEIXFClient($be_ixf_config);
  $variables['brightedge_head_open'] = $be_ixf->getHeadOpen();
  $variables['brightedge_body_open'] = $be_ixf->getBodyOpen();
  $variables['brightedge_body_close'] = $be_ixf->close();

  // Geolocation functionality (using awf_geolocation module).
  if (function_exists('awf_geolocate_user_in_uk')) {
    $in_uk = awf_geolocate_user_in_uk();

    // Add 'in-uk' class to <body> if user is in the UK (based on their IP).
    if ($in_uk) {
      $variables['attributes']['class'][] = 'in-uk';
    }
  }

  // Add 'in-eu' class to <body> if user is in the EU.
  if (function_exists('awf_geolocate_user_in_eu')) {
    $in_eu = awf_geolocate_user_in_eu();

    if ($in_eu) {
      $variables['attributes']['class'][] = 'in-eu';
    }
  }
}

/**
 * Implements template_preprocess_page().
 */
function awf_preprocess_page(&$variables) {
  $variables['donate_url'] = 'https://secure.awf.org/';

  // Geolocation functionality (using awf_geolocation module).
  if (function_exists('awf_geolocate_user_in_uk')) {
    $in_uk = awf_geolocate_user_in_uk();

    // Override Donate URL if user is in the UK.
    if ($in_uk) {
      $variables['donate_url'] = 'https://secure.awf.org/donate-uk';
    }
  }
}

/**
 * Implements template_preprocess_page().
 */
function awf_preprocess_region(&$variables) {
  // Geolocation functionality (using awf_geolocation module).
  $variables['in_uk'] = '';

  if (function_exists('awf_geolocate_user_in_uk')) {
    $in_uk = awf_geolocate_user_in_uk();

    // Add template variable indicating if user is in the UK.
    if ($in_uk) {
      $variables['in_uk'] = TRUE;
    }
  }
}

/**
 * Implements template_preprocess_node().
 */
function awf_preprocess_node(&$variables) {
  $node = $variables['node'];
  $variables['author_about'] = $node->getOwner()->field_about_the_author->view();
  $variables['user_picture'] = $node->getOwner()->user_picture->view('compact');
}

/**
 * Implements theme_suggestions_page_alter().
 */
function awf_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  // Add content type suggestions.
  if ($node = \Drupal::request()->attributes->get('node')) {
    array_splice($suggestions, 1, 0, 'page__node__' . $node->getType());
  }
}

/**
 * Implements theme_preprocess_block().
 */
function awf_preprocess_block(&$vars) {
  $request = \Drupal::request();
  if ($route = $request->attributes->get(\Symfony\Cmf\Component\Routing\RouteObjectInterface::ROUTE_OBJECT)) {
    $vars["page_title"] = \Drupal::service('title_resolver')->getTitle($request, $route);
  }

}

/**
 * Implements template_preprocess_field().
 */
function awf_preprocess_field(&$variables) {
  $field_name = $variables['field_name'];

  // Add caret class to specified link fields.
  if ($field_name == 'field_view_more') {
    $variables['items'][0]['content']['#options']['attributes']['class'][] = 'caret';
  }
}
